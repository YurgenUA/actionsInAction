name: Cut off release (main->release/X.X.X)

on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  invoke:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Examine branch
      run: |
        myBranch=$GITHUB_REF_NAME
        if [ $myBranch != "main" ];
        then
          echo "Can only run on 'main' branch"
          exit 1
        fi
        echo "Branch check passed"
        exit 0
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: main
    - uses: fregante/setup-git-user@v1

    - name: Extract version
      id: extract_version
      uses: Saionaro/extract-package-version@v1.0.6
      # From now you can access the version
    - name: Print version
      run: echo ${{ steps.extract_version.outputs.version }}

    - name: Bump release version
      id: bump_version
      uses: christian-draeger/increment-semantic-version@1.0.2
      with:
        current-version: ${{ steps.extract_version.outputs.version }}
        version-fragment: 'feature'
    - name: Switch to new branch if it's not exist yet
      id: new_branch
      env:
        DESIRED_BRANCH: release/${{ steps.bump_version.outputs.next-version }}
      run: |
        echo ${{ steps.bump_version.outputs.next-version }}
        existInRemote=$(git ls-remote --heads origin $DESIRED_BRANCH)
        if [[ -z ${existInRemote} ]]; then
            echo "Branch '$DESIRED_BRANCH' not exists yet"
        else
            echo "Branch '$DESIRED_BRANCH' already exists. PLease remove it and restart workflow"
            exit 1
        fi
        git checkout -b $DESIRED_BRANCH
        echo "DESIRED_BRANCH=$DESIRED_BRANCH" >> $GITHUB_ENV        
    - name: Update version in package.json
      uses: jossef/action-set-json-field@v2
      with:
        file: package.json
        field: version
        value: ${{ steps.bump_version.outputs.next-version }}

    - name: Commit to local git branch
      run: |
        git add --all
        git commit -m "bump version to '${{ steps.bump_version.outputs.next-version }}'"
        echo "####  ${{ steps.new_branch.outputs.desiredBranch }}"
        echo "@@@  $DESIRED_BRANCH"
        
        git push --set-upstream origin $DESIRED_BRANCH
